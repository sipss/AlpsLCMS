% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data_analysis.R
\name{permutation_test_plot}
\alias{permutation_test_plot}
\title{Permutation test plot}
\usage{
permutation_test_plot(
  lcms_data_analysis_model,
  permMatrix,
  xlab = "AUCs",
  xlim,
  ylim = NULL,
  breaks = "Sturges",
  main = "Permutation test"
)
}
\arguments{
\item{lcms_data_analysis_model}{A lcms_data_analysis_model}

\item{permMatrix}{A permutation fitness outcome from permutation_test_model}

\item{xlab}{optional xlabel}

\item{xlim}{optional x-range}

\item{ylim}{otional y-range}

\item{breaks}{optional custom histogram breaks (defaults to 'sturges')}

\item{main}{optional plot title (or TRUE for autoname)}
}
\value{
A plot with the comparison between the actual model versus the permuted models
}
\description{
Plot permutation test using actual model and permutated models
}
\examples{
# Data analysis for a table of integrated peaks

## Generate an artificial lcms_dataset_peak_table:
### Generate artificial metadata:
num_samples <- 32 # use an even number in this example
num_peaks <- 20
metadata <- data.frame(
    lcmsExperiment = as.character(1:num_samples),
    Condition = rep(c("A", "B"), times = num_samples/2),
    stringsAsFactors = FALSE
)

### The matrix with peaks
peak_means <- runif(n = num_peaks, min = 300, max = 600)
peak_sd <- runif(n = num_peaks, min = 30, max = 60)
peak_matrix <- mapply(function(mu, sd) rnorm(num_samples, mu, sd),
                                            mu = peak_means, sd = peak_sd)
colnames(peak_matrix) <- paste0("Peak", 1:num_peaks)

## Artificial differences depending on the condition:
peak_matrix[metadata$Condition == "A", "Peak2"] <-
    peak_matrix[metadata$Condition == "A", "Peak2"] + 70

peak_matrix[metadata$Condition == "A", "Peak6"] <-
    peak_matrix[metadata$Condition == "A", "Peak6"] - 60

### The lcms_dataset_peak_table
peak_table <- new_lcms_dataset_peak_table(
    peak_table = peak_matrix,
    metadata = list(external = metadata)
)

methodology <- plsda_auroc_vip_method(ncomp = 3)
model <- lcms_data_analysis(
    peak_table,
    y_column = "Condition",
    identity_column = NULL,
    external_val = list(iterations = 3, test_size = 0.25),
    internal_val = list(iterations = 3, test_size = 0.25),
    data_analysis_method = methodology
)

p = permutation_test_model(peak_table,
                           y_column = "Condition",
                           identity_column = NULL,
                           external_val = list(iterations = 3, test_size = 0.25),
                           internal_val = list(iterations = 3, test_size = 0.25),
                           data_analysis_method = methodology,
                           nPerm = 10)

permutation_test_plot(model, p)

}
