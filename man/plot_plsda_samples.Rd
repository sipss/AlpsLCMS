% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plsda.R
\name{plot_plsda_samples}
\alias{plot_plsda_samples}
\title{Plot PLSDA predictions}
\usage{
plot_plsda_samples(model, newdata = NULL, plot = TRUE)
}
\arguments{
\item{model}{A plsda model}

\item{newdata}{newdata to predict, if not included model$X_test will be used}

\item{plot}{A boolean that indicate if results are plotted or not}
}
\value{
A plot of the samples or a ggplot object
}
\description{
Plot PLSDA predictions
}
\examples{
#' # Data analysis for a table of integrated peaks

## Generate an artificial lcms_dataset_peak_table:
### Generate artificial metadata:
num_samples <- 32 # use an even number in this example
num_peaks <- 20
metadata <- data.frame(
    lcmsExperiment = as.character(1:num_samples),
    Condition = rep(c("A", "B"), times = num_samples/2),
    stringsAsFactors = FALSE
)

### The matrix with peaks
peak_means <- runif(n = num_peaks, min = 300, max = 600)
peak_sd <- runif(n = num_peaks, min = 30, max = 60)
peak_matrix <- mapply(function(mu, sd) rnorm(num_samples, mu, sd),
                                            mu = peak_means, sd = peak_sd)
colnames(peak_matrix) <- paste0("Peak", 1:num_peaks)

## Artificial differences depending on the condition:
peak_matrix[metadata$Condition == "A", "Peak2"] <-
    peak_matrix[metadata$Condition == "A", "Peak2"] + 70

peak_matrix[metadata$Condition == "A", "Peak6"] <-
    peak_matrix[metadata$Condition == "A", "Peak6"] - 60

### The lcms_dataset_peak_table
peak_table <- new_lcms_dataset_peak_table(
    peak_table = peak_matrix,
    metadata = list(external = metadata)
)

## We will use a double cross validation, splitting the samples with random
## subsampling both in the external and internal validation.
## The classification model will be a PLSDA, exploring at maximum 3 latent
## variables.
## The best model will be selected based on the area under the ROC curve
methodology <- plsda_auroc_vip_method(ncomp = 1)
model <- lcms_data_analysis(
    peak_table,
    y_column = "Condition",
    identity_column = NULL,
    external_val = list(iterations = 1, test_size = 0.25),
    internal_val = list(iterations = 1, test_size = 0.25),
    data_analysis_method = methodology
)

#plot_plsda_samples(model$outer_cv_results[[1]]$model)

}
